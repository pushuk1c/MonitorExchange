// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonitorExchange.Data;

#nullable disable

namespace MonitorExchange.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250305161843_mssql.onprem_migration_288")]
    partial class mssqlonprem_migration_288
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MonitorExchange.Models.FEImport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FileExchangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GoodsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GoodsSizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FileExchangeId");

                    b.HasIndex("GoodsId");

                    b.HasIndex("GoodsSizeId");

                    b.ToTable("FEImports");
                });

            modelBuilder.Entity("MonitorExchange.Models.FEOffers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FileExchangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GoodsSizeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("discountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileExchangeId");

                    b.HasIndex("GoodsId");

                    b.HasIndex("GoodsSizeId");

                    b.HasIndex("StockId");

                    b.ToTable("FEOffers");
                });

            modelBuilder.Entity("MonitorExchange.Models.FileExchange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InAll")
                        .HasColumnType("int");

                    b.Property<int>("Item")
                        .HasColumnType("int");

                    b.Property<string>("StrId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileExchanges");
                });

            modelBuilder.Entity("MonitorExchange.Models.Goods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Artikul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brend")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriaSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriaSiteUkr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryUkr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataSeason")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialUkr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFull")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameUkr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("View")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Goodses");
                });

            modelBuilder.Entity("MonitorExchange.Models.GoodsSize", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GoodsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.ToTable("GoodsSizes");
                });

            modelBuilder.Entity("MonitorExchange.Models.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("MonitorExchange.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MonitorExchange.Models.FEImport", b =>
                {
                    b.HasOne("MonitorExchange.Models.FileExchange", "FileExchange")
                        .WithMany("FEImports")
                        .HasForeignKey("FileExchangeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MonitorExchange.Models.Goods", "Goods")
                        .WithMany("FEImports")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MonitorExchange.Models.GoodsSize", "GoodsSize")
                        .WithMany("FEImports")
                        .HasForeignKey("GoodsSizeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FileExchange");

                    b.Navigation("Goods");

                    b.Navigation("GoodsSize");
                });

            modelBuilder.Entity("MonitorExchange.Models.FEOffers", b =>
                {
                    b.HasOne("MonitorExchange.Models.FileExchange", "FileExchange")
                        .WithMany("FEOffers")
                        .HasForeignKey("FileExchangeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MonitorExchange.Models.Goods", "Goods")
                        .WithMany("FEOffers")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MonitorExchange.Models.GoodsSize", "GoodsSize")
                        .WithMany("FEOffers")
                        .HasForeignKey("GoodsSizeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MonitorExchange.Models.Stock", "Stock")
                        .WithMany("FEOffers")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FileExchange");

                    b.Navigation("Goods");

                    b.Navigation("GoodsSize");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("MonitorExchange.Models.GoodsSize", b =>
                {
                    b.HasOne("MonitorExchange.Models.Goods", "Goods")
                        .WithMany("GoodsSizes")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("MonitorExchange.Models.FileExchange", b =>
                {
                    b.Navigation("FEImports");

                    b.Navigation("FEOffers");
                });

            modelBuilder.Entity("MonitorExchange.Models.Goods", b =>
                {
                    b.Navigation("FEImports");

                    b.Navigation("FEOffers");

                    b.Navigation("GoodsSizes");
                });

            modelBuilder.Entity("MonitorExchange.Models.GoodsSize", b =>
                {
                    b.Navigation("FEImports");

                    b.Navigation("FEOffers");
                });

            modelBuilder.Entity("MonitorExchange.Models.Stock", b =>
                {
                    b.Navigation("FEOffers");
                });
#pragma warning restore 612, 618
        }
    }
}
